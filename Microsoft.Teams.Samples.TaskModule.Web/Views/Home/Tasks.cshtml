@using Microsoft.Teams.Samples.TaskModule.Web.Helper;

<div class="font-semibold font-title">Video Bot App for Microsoft Teams - Demo</div>
<p>
    A task module allows Teams app developers to create one or more custom, modal experiences with custom code for their users, particularly useful for initiating and/or completing tasks using a GUI that does not litter a Teams conversation with superfluous,
    intermediate task completion information.
</p>
<p>
    <div style="text-align: center; margin-left: auto; margin-right: auto;">
        <button class="button-primary" onclick="submit('youtube');">YouTube</button>
        <button class="button-primary" onclick="submit('msstream');">MsStream</button>
        <p></p>
    </div>
<p></p>
<script src="~/Scripts/teamsapp.js"></script>
<script>
    microsoftTeams.initialize();

    // TODO: remove or adapt this submitHandler
    submitHandler = (err, result) => {
            console.log(`Submit handler - err: ${err}`);
            //alert("Result = " + JSON.stringify(result) + "\nError = " + JSON.stringify(err));
        };

        function submit(type) {
            let taskInfo = {
                title: null,
                height: null,
                width: null,
                url: null,
                card: null,
                fallbackUrl: null,
                completionBotId: null,
            };

            taskInfo.title = "Video Bot Demo";
            taskInfo.height = "medium";
            taskInfo.width = "medium";

            if (type.includes('youtube')) {
                taskInfo.url = "@(ApplicationSettings.BaseUrl)" + "/youtube";
                taskInfo.title = "@(TaskModuleUIConstants.YouTube.Title)";
                taskInfo.height = "@(TaskModuleUIConstants.YouTube.Height)";
                taskInfo.width = "@(TaskModuleUIConstants.YouTube.Width)";
            }
            else if (type.includes('msstream')) {
                taskInfo.url = "@(ApplicationSettings.BaseUrl)" + "/msstream";
                taskInfo.title = "@(TaskModuleUIConstants.MsStream.Title)";
                taskInfo.height = "@(TaskModuleUIConstants.MsStream.Height)";
                taskInfo.width = "@(TaskModuleUIConstants.MsStream.Width)";
            }
            else {
                taskInfo.card =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(AdaptiveCardHelper.GetAdaptiveCard()));
                taskInfo.title = "@(TaskModuleUIConstants.AdaptiveCard.Title)";
                taskInfo.height = "@(TaskModuleUIConstants.AdaptiveCard.Height)";
                taskInfo.width = "@(TaskModuleUIConstants.AdaptiveCard.Width)";
            }

            // Set fallback URL
            taskInfo.fallbackUrl = taskInfo.url;

            if (type.includes('bot'))
                taskInfo.completionBotId = "@(ApplicationSettings.MicrosoftAppId)";

            microsoftTeams.tasks.startTask(taskInfo, submitHandler);
        }
</script>
